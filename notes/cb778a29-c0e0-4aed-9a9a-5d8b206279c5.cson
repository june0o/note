createdAt: "2018-07-05T08:48:04.808Z"
updatedAt: "2018-07-26T01:15:39.421Z"
type: "MARKDOWN_NOTE"
folder: "78ec2c10b762f941f312"
title: "jBPM-docs :balloon:"
content: '''
  ## jBPM-docs :balloon:
  
  ### 1. Overview
  jBPM은 유연한 BPM (Business Process Management) 제품군입니다. 가볍고 완전히 오픈 소스이며 (Apache License 2.0에 따라 배포 됨) Java로 작성되었습니다. 라이프 사이클 전반에 걸쳐 비즈니스 프로세스 및 사례를 모델링, 실행 및 모니터링 할 수 있습니다.
  
  실행 가능한 비즈니스 프로세스는 비즈니스 사용자와 개발자 간의 격차를 줄이고 비즈니스 사용자가 이해할 수 있지만 직접 실행될 수있는 도메인 별 개념을 사용합니다.
  
  비즈니스 프로세스는 전체 라이프 사이클에서 지원되어야합니다. 작성, 배포, 프로세스 관리 및 작업 목록, 대시 보드 및 보고.
  
  핵심 엔진 위에는 전체 라이프 사이클 동안 비즈니스 프로세스를 지원할 수있는 많은 기능과 도구가 제공됩니다.
  
  - Pluggable human task service based on WS-HumanTask for including tasks that need to be performed by human actors.
  - Pluggable persistence and transactions (based on JPA / JTA).
  - All combined in one web-based workbench, supporting the complete BPM life cycle:
    - Modeling and deployment - author your processes, rules, data models, forms and other assets
    - Execution - execute processes, tasks, rules and events on the core runtime engine
    - Runtime Management - work on assigned task, manage process instances, etc
    - Reporting - keep track of the execution using Business Activity Monitoring capabilities
  
  ![Overview.png](https://docs.jboss.org/jbpm/release/7.7.0.Final/jbpm-docs/html_single/Overview/Overview.png)
  
  #### 1.3 Core Engine
  #### 1.4 Process Designer
  웹 기반 jBPM Designer를 사용하면 웹 기반 환경에서 비즈니스 프로세스를 모델링 할 수 있습니다. 비즈니스 사용자를 대상으로하며 Eclipse 플러그인과 유사하게 비즈니스 프로세스를보고 편집 할 수있는 그래픽 편집기를 제공합니다 (끌어서 놓기 사용). Eclipse 편집기와 웹 기반 디자이너 간의 라운드 트립을 지원합니다. 또한 프로세스 시뮬레이션을 지원합니다.
  
  #### 1.5 Data Modeler
  새로운 Data Modeler 도구는 고급 개발 기술이나 명시 적 코딩 없이도 논리적 및 물리적 데이터 모델을 구축하기위한 쉽고 직접적인 시각적 지원을 제공합니다. 데이터 모델러는 투명하게 워크 벤치에 통합됩니다. 
  
  #### 1.6 Process Instance and Task Management
  비즈니스 프로세스는 웹 기반 관리 콘솔을 통해 관리 할 수 있습니다. 비즈니스 사용자를 대상으로하며 주요 기능은 다음과 같습니다.
  - Process instance management: 새 프로세스 인스턴스를 시작하고, 실행중인 프로세스 인스턴스 목록을 얻고, 특정 프로세스 인스턴스의 상태를 시각적으로 검사하는 기능.
  - Human task management: 현재의 모든 타스크 (사용자에게 할당되었거나 사용자가 청구 할 수 있음) 목록을 가져올 수 있으며, 사용자 정의 타스크 양식을 사용하여 타스크 목록에서 타스크를 완료 할 수 있습니다.
  
  #### 1.7 Business Activity Monitoring
  
  #### 1.8 Workbench
  워크 벤치는 위의 모든 웹 기반 도구를 하나의 구성 가능한 솔루션으로 결합한 웹 기반 응용 프로그램입니다.
  다음과 같은 것을 지원한다.
  - 버전 관리, 원격 Git 액세스 (파일 시스템) 및 REST를 통한 액세스를 지원하는 Git 저장소를 사용하여 비즈니스 프로세스 및 관련 아티팩트를 저장하는 저장소 서비스.
  - 비즈니스 사용자를 대상으로 비즈니스 프로세스를 관리하는 웹 기반 사용자 인터페이스. 또한 아티팩트 (설계자, 데이터 및 양식 모델러와 같은 웹 기반 편집자가 여기에 통합되어 있음)의 시각화 (및 편집)는 물론 카테고리 화, 빌드 및 배치 등을 지원합니다.
  - 여러 명의 액터 (예 : 비즈니스 사용자 및 개발자)가 동일한 프로젝트에서 함께 작업 할 수 있도록하는 공동 작업 기능.
  
  #### 1.9 Eclipse Developer Tools
  Eclipse 기반 도구는 Eclipse IDE에 대한 플러그인 세트이며 개발 환경에서 비즈니스 프로세스를 통합 할 수 있도록 해줍니다. 
  다음과 같은 것을 지원한다.
  - Wizard for creating a new jBPM project
  - A graphical editor for BPMN 2.0 processes
  - The ability to plug in your own domain-specific nodes
  - Validation
  - Runtime support (so you can select which version of jBPM you would like to use)
  - Graphical debugging to see all running process instances of a selected session, to visualize the current state of one specific process instance, etc.
  
  ### 3. jBPM install 
  
  jBPM-installer-full 7.7.0.Final.zip 을 다운 받아 install 하는 방법에 대해 설명한다.
  
  #### 3.2 Downloading the Installer
  [jBPM-installer](https://download.jboss.org/jbpm/release/7.7.0.Final/jbpm-installer-full-7.7.0.Final.zip) 를 다운 받은 후 압축을 푼다.
  
  #### 3.3 Demo Setup
  ##### 1) build.xml 파일을 열어 187 Line (혹은 Getting Eclipse ...로 검색) 을 아래와 같이 수정
  : 다운로드 주소가 바뀐으로 추정되며,
  2018/07/05 현재 eclipse 버전은 photon 으로 neon은 2개 전 버전이다.
  
      <get src="http://download.eclipse.org/technology/epp/downloads/release/neon/3/eclipse-jee-neon-3-${download.type}.${download.extension}"
  
  ##### 2) 압축을 푼 폴더에서 커맨드 창을 띄우고 **ant install.demo** 입력 
  ![pic_jBPM_install1.png](:storage/cb778a29-c0e0-4aed-9a9a-5d8b206279c5/6e9b48aa.png)
  
  위 커맨드를 입력하면 아래와 같은 일을 한다고 한다.
  - Download WildFly application server
  - Configure and deploy a process execution server
  - Configure and deploy the workbench
  - Configure and deploy the case management application
  - Download Eclipse
  - Install the Drools and jBPM Eclipse plugin
  - Install the Eclipse BPMN 2.0 Modeler
  
  jBPM library 를 다운 받은 후 eclipse 에서 jBPM bin 디렉토리를 설정하는 방법도 있는데 이 문서에서는 이 방법을 추천하고 있음.
  **BUILD SUCCESSFUL** 이 출력되면 성공한 것!
  
  #### :star: 덧붙이기 
  1) Eclipse 다운로드 하는 코드를 주석처리하고, photon 버전을 다운 받은 후 install folder 아래에 두어도 상관 없는 것 같다.
  2) **ant install.demo.noeclipse** 를 사용하면 eclipse 를 다운 안 받는다.
  start 할 때도 **ant start.demo.noeclipse** 를 사용
  
  ##### 3) start 하기
  ###### 커맨드 창에서 **ant start.demo** 입력
  
  ![pic_jBPM_start.png](:storage/cb778a29-c0e0-4aed-9a9a-5d8b206279c5/6fa6cee3.png)
  
  위 커맨드를 입력하면 아래와 같은 일을 한다고 한다.
  - Start H2 database server
  - Start WildFly application server
  - Start Eclipse
  
  그리고 브라우저에서 "http://localhost:8080/jbpm-console/kie-wb.jsp" 을 입력하면 아래와 같은 화면이 나온다!
  username: krisv
  password: krisv
  
  ![pic_jBPM_console.png](:storage/cb778a29-c0e0-4aed-9a9a-5d8b206279c5/b7605e5c.png)
  
  ##### 4) stop 하기 
  ###### 커맨드 창에서 **ant stop.demo** 입력
  
  #### 3.4 10-Minute Tutorial using the Workbench
  
  process management console 을 띄운다. "http://localhost:8080/jbpm-console"
  (krisv / krisv as username / password.)
  
  The workbench supports the entire life cycle of your business processes: authoring, deployment, process management, tasks and dashboards.
  - 프로젝트 작성 페이지에서는 각 프로젝트가 비즈니스 프로세스 (비즈니스 규칙, 데이터 모델, 양식 등)를 포함 할 수있는 기존 리포지토리를 볼 수 있습니다. 자체 프로젝트를 만들거나 기존 예제를 가져 와서 살펴볼 수 있습니다.
  - 프로세스를 실행 가능하게하려면 먼저 프로세스를 빌드하고 배포해야합니다. 이렇게하려면 프로젝트 제작 페이지에서 선택한 프로젝트를 열고 빌드 및 배포 (오른쪽 위 모서리)를 클릭합니다.
  - 프로세스 정의 및 인스턴스를 관리하려면 맨 위 메뉴 표시 줄의 "프로세스 관리"메뉴 옵션을 클릭하여 관심 분야에 따라 사용 가능한 옵션 중 하나를 선택하십시오.
    - Process Definitions - lists all available process definitions
    - Process Instances - lists all active process instances (allows to show completed, aborted as well by changing filter criteria)
  
  #### 3.5 10-Minute Tutorial using Eclipse
  
  ### 6. Core Engine API
  #### 6.1 Overview
  #### 6.2 KieBase
  
  #### 6.3 KieSession
  ##### 6.3.1 ProcessRuntime
  ##### 6.3.2 Event Listeners
  ##### 6.3.3 Correlation Keys
  ##### 6.3.4 Threads
  일반적으로 jBPM 엔진은 일련의 동작을 실행합니다. 예를 들어 엔진이 프로세스에서 스크립트 작업을 발견하면 해당 스크립트를 동 기적으로 실행하고 실행을 계속하기 전에 완료 될 때까지 기다립니다. 마찬가지로, 프로세스가 병렬 게이트웨이를 만날 경우, 순차적으로 각 나가는 분기를 차례로 트리거합니다. 이것은 실행이 거의 항상 즉각적이므로 매우 빠르며 오버 헤드가 거의 발생하지 않기 때문에 가능합니다. 결과적으로 사용자는 대개이 사실을 알지 못합니다. 비슷하게, 프로세스 내의 액션 스크립트도 동 기적으로 실행되며 엔진은 프로세스를 계속하기 전에 엔진이 완료 될 때까지 기다립니다. 예를 들어, 스크립트의 일부로 Thread.sleep (...)을 수행해도 엔진이 다른 곳에서 실행을 계속하지는 않지만 해당 기간 동안 엔진 스레드를 차단합니다.
  
  동일한 원칙이 서비스 작업에도 적용됩니다. 프로세스에서 서비스 태스크에 도달하면 엔진은이 서비스의 핸들러도 동 기적으로 호출합니다. 엔진은 실행을 계속하기 전에 completeWorkItem (...) 메서드가 반환 될 때까지 대기합니다. 실행이 즉각적이지 않으면 서비스 핸들러가 서비스를 비동기 적으로 실행하는 것이 중요합니다.
  
  #### 6.4 RuntimeManager
  ##### 6.4.1 Overview
  ##### 6.4.2 Strateties
  ##### 6.4.3 Usage
  Example)
  
      RuntimeEnvironment env = RuntimeEnvironmentBuilder.Factory.get().
                          .newDefaultInMemoryBuilder()      
                          .addAsset(ResourceFactory.newClassPathResource("BPMN2-ScriptTask.bpmn2"), ResourceType.BPMN2)
                          .get();
      RuntimeManager manager = RuntimeManagerFactory.Factory.get().newSingletonRuntimeManager(env);
      RuntimeEngine runtime = manager.getRuntimeEngine(EmptyContext.get());
      KieSession kSession = runtime.getKieSession();
      
      manager.disposeRuntimeEngine(runtime);
  
  ##### 6.4.4 Configuration
  
  #### 6.5 Services
  RuntimeManager API 위에는 jBPM 버전 6.2에서 제공되는 상위 수준의 서비스 세트가 제공됩니다. 이러한 서비스는 (j) BPM 기능을 사용자 정의 응용 프로그램에 임베드하는 가장 쉬운 방법입니다. 이러한 서비스의 일부로 완전한 모듈 집합이 제공됩니다. 그들은 다양한 환경에서 그들의 입양을 용이하게하기 위해 여러 모듈로 분할됩니다.
  
  - jbpm-services-api
  - jbpm-kie-services
  - jbpm-services-cdi
  - jbpm-services-ejb-api
  - jbpm-services-ejb-impl
  - jbpm-services-ejb-timer
  - jbpm-services-ejb-client
  
  
'''
tags: []
isStarred: false
isTrashed: false
